<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!-- spring 配置文件位置 -->
    <!--<context-param>-->
        <!--<param-name>contextConfigLocation</param-name>-->
        <!--<param-value>classpath:spring/spring.xml</param-value>-->
    <!--</context-param>-->
    <!-- 配置spring -->
    <!--<listener>-->
        <!--<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
    <!--</listener>-->

    <!-- 配置spring-MVC的前端控制器 -->
    <!--<servlet>-->
        <!--<servlet-name>DispatcherServlet</servlet-name>-->
        <!--<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
        <!--&lt;!&ndash; 加载配置了处理器适配器、适配器等组件的配置文件-->
            <!--如果不配置contextConfigLocation，则会默认加载WEB-INF下面的servlet名称-servlet.xml(springMVC-servlet.xml)-->
         <!--&ndash;&gt;-->
        <!--<init-param>-->
            <!--<param-name>contextConfigLocation</param-name>-->
            <!--<param-value>classpath:spring/spring-mvc.xml</param-value>-->
        <!--</init-param>-->
        <!--<load-on-startup>1</load-on-startup>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>DispatcherServlet</servlet-name>-->
        <!--&lt;!&ndash; 处理所有请求,对于静态的资源请求，则要配置不让DispatcherServlet进行解析-->
            <!--使用此种方式可以实现restful风格的url-->
         <!--&ndash;&gt;-->
        <!--<url-pattern>/</url-pattern>-->
        <!--&lt;!&ndash; 处理所有以.do结尾的请求-->
        <!--<url-pattern>*.do</url-pattern> &ndash;&gt;-->
    <!--</servlet-mapping>-->

    <!--	编码过滤器		-->


    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>